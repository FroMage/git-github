#!/bin/bash -e

# resolve links - $0 may be a softlink
PRG="$0"
while [ -h "$PRG" ]; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`/"$link"
    fi
done

USAGE='<branchname>'
LONG_USAGE='git-ghfix lets you merge your issue branch to master 
and mark the issue as fixed.'

BRANCH_NAME=$1
# default to current branch
test -n "$BRANCH_NAME" || BRANCH_NAME=`git symbolic-ref HEAD | sed -e 's/refs\/heads\///'`

. $(dirname "$PRG")/gh-sh-setup

sanity_checks

echo "Merging branch $BRANCH_NAME"

git checkout $BRANCH_NAME
git rebase master
git checkout master
git merge $BRANCH_NAME
git branch -d $BRANCH_NAME

echo "Closing issue #$BRANCH_NAME"
$CURL_CMD "$AUTH" -X PATCH --data-binary "{\"state\": \"closed\"}" "$ISSUE_URL" > /dev/null || fail "Failed to close issue"

echo "Removing $PROGRESS_LABEL label"
$CURL_CMD "$AUTH" -X DELETE "$ISSUE_URL/labels/$PROGRESS_LABEL" > /dev/null  || fail "Failed to remove $PROGRESS_LABEL label"

echo "*** You are now on branch master ***"

