#!/bin/bash -e

# resolve links - $0 may be a softlink
PRG="$0"
while [ -h "$PRG" ]; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`/"$link"
    fi
done

USAGE='<branchname>'
LONG_USAGE='git-ghbranch lets you create a new branch based on a 
GitHub issue and mark the issue as in progress.'

BRANCH_NAME=$1

. $(dirname "$PRG")/gh-sh-setup

sanity_checks

# Assign to user
echo "Assigning issue to $GITHUB_USER and opening it"
$CURL_CMD "$AUTH" -X PATCH --data-binary "{\"assignee\": \"$GITHUB_USER\", \"state\": \"open\"}" "$ISSUE_URL"  > /dev/null || fail "Failed to assign issue"

# Add tag
echo "Marking #$BRANCH_NAME as $PROGRESS_LABEL"
$CURL_CMD "$AUTH" -X POST --data-binary "[\"$PROGRESS_LABEL\"]" "$ISSUE_URL/labels"  > /dev/null || fail "Failed to mark as $PROGRESS_LABEL"

# Cache the jira issue title for later cheaper commits
echo "Getting description for #$BRANCH_NAME"
get_cached_issue $BRANCH_NAME
if test -z "$ISSUE_DESCR"
then
    get_issue_descr $BRANCH_NAME
    if test -z "ISSUE_DESCR"
    then
        fail "Failed to get issue description"
    fi
    echo "$BRANCH_NAME: $ISSUE_DESCR" >> $CACHE_FILE
fi

echo "Doing a branch for $BRANCH_NAME"
git checkout -b $BRANCH_NAME

echo "*** You are now on branch $BRANCH_NAME ***"
